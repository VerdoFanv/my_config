-- ubuntu --
touch .env --> create file .env
vim .env --> edit file .env
:wq --> exit from vim

-- linux ------------------------------------------------------------------------------------
sudo yum update -y --> software update
sudo amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2 --> install php & mariadb
sudo yum install -y httpd --> install web server apache
sudo systemctl start httpd --> start web server
sudo systemctl enable httpd --> add config to run while system boot
sudo groupadd www --> add group www
sudo usermod -a -G www ec2-user --> add ec2 user to www
sudo chgrp -R www /var/www --> change group ownership

-- change permission --
sudo chmod 2775 /var/www
find /var/www -type d -exec sudo chmod 2775 {} +
find /var/www -type f -exec sudo chmod 0664 {} +
------------------------
cd /var/www 
mkdir inc --> make directory inc

-- set db config --
cd inc
>file.inc --> create new file
nano file.inc --> edit file

-- set php code --
cd /var/www/html
>file.php --> create new file
nano file.php --> edit file

-- ssh to ec2 --
ssh ec2-user@privateIP --> use IP
ssh -i file.ext ec2-user@privateIP --> use IP & key pair

-- create file --
nano file.ext

-- change file permission --
chmod 400 file.ext

---------------------------------------------------------------------------------------------

// set up tool
-- PM2 --
pm2 start npm --name "" -- run "start"
pm2 restart <name | all | id>
pm2 stop <name | all | id>
pm2 logs <name | id>
pm2 list
pm2 monit
pm2 startup
pm2 save

-- NVM --
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
nvm install (npm version)

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

require('crypto').randomBytes(64).toString('hex');
ssh-keygen -t rsa -b 4096 -m PEM -f jwtRS256.key